buildscript {
    ext {
        springBootVersion = "1.5.3.RELEASE"
        //springBootVersion = "2.0.0.M1"
        kotlinVersion = "1.1.2-4"
        gsonVersion = "2.8.0"
        junitVersion = "4.12"
        junitJupiteVersion = "5.0.0-M4"
        junitPlatformVersion = "1.0.0-M4"
        junitVintageVersion = "4.12.0-M4"
        jacksonModuleKotlinVersion = "2.8.8"
        spekVersion = "1.1.1"
        restAssuredVersion = "3.0.3"
        hamcrestVersion = "1.3"
        hamkrestVersion = "1.4.0.0"
        reactorKotlinExtensions = "1.0.0.M2"
        hsqldbVersion = "2.4.0"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
    }
}

apply plugin: "idea"
apply plugin: "kotlin"
//apply plugin: "kotlin-jpa"
apply plugin: "application"
apply plugin: "org.springframework.boot"
//apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

springBoot {
    mainClassName = 'com.elementalsource.kotlinapi.AppKt'
    applicationName = "kotlin-api"
}

jar {
    baseName = "kotlin-api"
    version = "1.0.0-SNAPSHOT"
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

sourceSets {
    main.kotlin.srcDirs += "src/main/kotlin"
    test.kotlin.srcDirs += "src/test/kotlin"
}

dependencies {
    //compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion")
    //compile("org.jetbrains.kotlin:kotlin-runtime:$kotlinVersion")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")

    compile("org.springframework.boot:spring-boot-starter:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    //compile("org.springframework.boot:spring-boot-starter-data-rest:$springBootVersion")
    //compile("org.springframework.boot:spring-boot-starter-webflux:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jersey:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-undertow:$springBootVersion")
    //compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    //compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")

    compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonModuleKotlinVersion")
    //compile("com.google.code.gson:gson:$gsonVersion")
    //compile("org.hsqldb:hsqldb:$hsqldbVersion")
    compile("io.projectreactor:reactor-kotlin-extensions:$reactorKotlinExtensions")

    /*testCompile("org.jetbrains.spek:spek-api:$spekVersion")
    testCompile("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion")
    testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiteVersion")
    testCompile("junit:junit:$junitVersion")
    testCompile("org.junit.platform:junit-platform-runner:$junitPlatformVersion")

    testCompile("io.rest-assured:rest-assured:$restAssuredVersion")
    testCompile("io.rest-assured:json-path:$restAssuredVersion")
    testCompile("io.rest-assured:json-schema-validator:$restAssuredVersion")
    testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
    testCompile("com.natpryce:hamkrest:$hamkrestVersion")*/
    //testCompile("io.projectreactor.addons:reactor-test")

    testCompile("org.jetbrains.kotlin:kotlin-test:$kotlinVersion")
    testCompile("org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion")
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
}

